import { defineComponent, reactive, ref, watch } from 'vue'

import { Icon } from '@vicons/utils'
import { getBaiduTip } from '@/api'
import TipsBox from '@/components/TipsBox'
import { ITips } from '@/types/tips'
import { NPopselect } from 'naive-ui'
import { Close } from '@vicons/ionicons5'

export default defineComponent({
  emits: ['isFocus'],
  setup(props, { emit }) {
    const inputValue = ref<string>('')
    const tips = reactive<ITips[]>([])
    const tipsShow = ref<boolean>(false)
    let firstFocus = false
    let watchStart = true

    const search = ref('google')
    watch(inputValue, async () => {
      if (watchStart) {
        const res = await getBaiduTip({
          ie: 'utf-8',
          json: 1,
          prod: 'pc',
          wd: inputValue.value,
        })
        tips.length = 0
        Object.assign(tips, res.g)
        tipsShow.value = true
        emit('isFocus', true)
      }
      if (inputValue.value.length === 0) {
        tipsShow.value = false
      }
    })

    const options = [
      {
        label: '谷歌',
        value: 'google',
      },
      {
        label: 'duckduckgo',
        value: 'duckduckgo',
      },
      {
        label: '必应',
        value: 'bing',
      },
      {
        label: '百度',
        value: 'baidu',
      },
    ]

    const switchSearch = () => {
      switch (search.value) {
        case 'google':
          window.open(
            `https://www.google.com/search?q=${inputValue.value}`,
            '_blank',
          )
          break
        case 'duckduckgo':
          window.open(`https://duckduckgo.com/?q=${inputValue.value}`, '_blank')
          break
        case 'bing':
          window.open(
            `https://www.bing.com/search?q=${inputValue.value}`,
            '_blank',
          )
          break
        case 'baidu':
          window.open(
            `https://www.baidu.com/s?wd=${inputValue.value}`,
            '_blank',
          )
          break
      }
    }

    const keydown = (e: KeyboardEvent) => {
      if (e.code === 'Enter') {
        switchSearch()
      }
    }
    return () => (
      <>
        <div
          class={
            'flex justify-between items-center relative lg:max-w-3xl w-10/12 justify-start m-auto top-30% animate__animated animate__bounceInDown'
          }
        >
          <NPopselect v-model:value={search.value} options={options} trigger={'click'}>
            <Icon size="37" class={'z-10 box-border p-0.5 ml-1'}>
              {search.value === 'google' ? (
                <svg
                  class="icon "
                  viewBox="0 0 1024 1024"
                  version="1.1"
                  xmlns="http://www.w3.org/2000/svg"
                  p-id="3108"
                  width="200"
                  height="200"
                >
                  <path
                    d="M214.101333 512c0-32.512 5.546667-63.701333 15.36-92.928L57.173333 290.218667A491.861333 491.861333 0 0 0 4.693333 512c0 79.701333 18.858667 154.88 52.394667 221.610667l172.202667-129.066667A290.56 290.56 0 0 1 214.101333 512"
                    fill="#FBBC05"
                    p-id="3109"
                  ></path>
                  <path
                    d="M516.693333 216.192c72.106667 0 137.258667 25.002667 188.458667 65.962667L854.101333 136.533333C763.349333 59.178667 646.997333 11.392 516.693333 11.392c-202.325333 0-376.234667 113.28-459.52 278.826667l172.373334 128.853333c39.68-118.016 152.832-202.88 287.146666-202.88"
                    fill="#EA4335"
                    p-id="3110"
                  ></path>
                  <path
                    d="M516.693333 807.808c-134.357333 0-247.509333-84.864-287.232-202.88l-172.288 128.853333c83.242667 165.546667 257.152 278.826667 459.52 278.826667 124.842667 0 244.053333-43.392 333.568-124.757333l-163.584-123.818667c-46.122667 28.458667-104.234667 43.776-170.026666 43.776"
                    fill="#34A853"
                    p-id="3111"
                  ></path>
                  <path
                    d="M1005.397333 512c0-29.568-4.693333-61.44-11.648-91.008H516.650667V614.4h274.602666c-13.696 65.962667-51.072 116.650667-104.533333 149.632l163.541333 123.818667c93.994667-85.418667 155.136-212.650667 155.136-375.850667"
                    fill="#4285F4"
                    p-id="3112"
                  ></path>
                </svg>
              ) : search.value === 'duckduckgo' ? (
                <svg
                  class="icon"
                  viewBox="0 0 1024 1024"
                  version="1.1"
                  xmlns="http://www.w3.org/2000/svg"
                  p-id="5377"
                  width="200"
                  height="200"
                >
                  <path
                    d="M512 0C229.248 0 0 229.248 0 512s229.248 512 512 512 512-229.248 512-512S794.752 0 512 0z m0 981.333333C252.8 981.333333 42.666667 771.157333 42.666667 512S252.842667 42.666667 512 42.666667s469.333333 210.133333 469.333333 469.333333-210.133333 469.333333-469.333333 469.333333z m436.010667-469.333333c0 205.013333-141.525333 376.874667-332.202667 423.466667-11.52-22.229333-22.613333-43.392-31.957333-61.354667 27.52 10.624 82.346667 30.634667 94.208 26.24 16.042667-6.144 12.032-134.357333-5.973334-138.453333-14.421333-3.2-69.632 35.712-91.349333 51.584l1.450667 6.656c3.328 16.938667 6.144 42.368 1.28 53.205333-0.042667 0.170667-0.085333 0.426667-0.170667 0.554667a9.301333 9.301333 0 0 1-2.901333 3.754666c-12.117333 8.021333-46.122667 12.117333-64.128 8.021334a22.016 22.016 0 0 1-2.730667-0.853334c-29.610667 16.896-85.76 47.317333-96 41.429334-14.037333-8.021333-16.085333-114.176-14.037333-140.288 1.493333-19.626667 70.528 12.202667 104.192 28.970666 7.424-6.954667 25.685333-11.605333 41.813333-13.226666-24.32-59.264-42.24-127.018667-31.274667-175.146667 0 0.085333 0.085333 0.085333 0.085334 0.085333 15.189333 10.581333 116.48 44.8 166.826666 43.818667 50.346667-1.024 132.864-31.701333 123.861334-56.448-9.045333-24.746667-91.093333 21.76-176.725334 13.824-63.402667-5.888-74.581333-34.304-60.586666-55.04 17.664-26.069333 49.834667 4.949333 102.869333-10.922667 53.12-15.829333 127.445333-44.16 154.965333-59.605333 63.744-35.541333-26.666667-50.218667-48-40.405333-20.224 9.386667-90.581333 27.178667-123.264 34.986666 18.261333-64.682667-25.728-177.024-74.965333-226.133333-16.042667-16.042667-40.576-26.112-68.394667-31.402667-10.666667-14.677333-27.904-28.629333-52.266666-41.685333a246.272 246.272 0 0 0-153.386667-24.917333l-1.024 0.170666-1.450667 0.170667 0.170667 0.085333c-6.314667 1.194667-10.112 3.413333-15.232 4.181334 6.314667 0.682667 30.08 11.776 45.098667 17.834666-7.424 2.901333-17.578667 4.608-25.429334 7.850667a35.328 35.328 0 0 0-8.704 2.389333c-7.381333 3.413333-12.928 16-12.8 21.973334 35.84-3.669333 88.832-1.109333 127.616 10.496-27.477333 3.84-52.693333 11.008-70.869333 20.565333-0.682667 0.341333-1.28 0.768-2.048 1.194667-2.304 0.853333-4.522667 1.792-6.485333 2.816-58.325333 30.72-84.096 102.613333-68.736 188.757333 13.781333 77.824 71.04 345.088 97.706666 472.064-169.514667-59.733333-291.072-221.269333-291.072-411.264C75.989333 271.189333 271.189333 75.989333 512 75.989333S948.010667 271.189333 948.010667 512zM388.053333 408.789333a32.341333 32.341333 0 1 0 0 64.682667 32.341333 32.341333 0 0 0 0-64.682667z m14.421334 29.952a8.362667 8.362667 0 1 1 0-16.725333 8.362667 8.362667 0 0 1 0 16.725333z m201.557333-44.501333a27.733333 27.733333 0 1 0 0 55.424 27.733333 27.733333 0 0 0 0-55.466667z m12.373333 25.642667a7.168 7.168 0 1 1 0-14.336 7.168 7.168 0 0 1 0 14.336zM397.354667 347.562667s-24.362667-11.093333-48 3.84c-23.637333 14.848-22.784 30.037333-22.784 30.037333s-12.544-27.989333 20.906666-41.728c33.536-13.653333 49.92 7.850667 49.92 7.850667z m223.402666-2.218667s-17.493333-9.984-31.146666-9.813333c-27.904 0.341333-35.456 12.629333-35.456 12.629333s4.693333-29.354667 40.32-23.466667a35.84 35.84 0 0 1 26.282666 20.650667z"
                    p-id="5378"
                    fill="#eba410"
                  ></path>
                </svg>
              ) : search.value === 'bing' ? (
                <svg
                  class="icon"
                  viewBox="0 0 1024 1024"
                  version="1.1"
                  xmlns="http://www.w3.org/2000/svg"
                  p-id="4149"
                  width="200"
                  height="200"
                >
                  <path
                    d="M512 1024c282.773333 0 512-229.226667 512-512S794.773333 0 512 0 0 229.226667 0 512s229.226667 512 512 512z"
                    fill="#008373"
                    p-id="4150"
                  ></path>
                  <path
                    d="M324.266667 204.8l122.730666 43.178667v432l172.864-99.776-84.757333-39.786667-53.461333-133.077333 272.384 95.701333v139.114667L447.061333 819.2 324.266667 750.890667z"
                    fill="#FFFFFF"
                    p-id="4151"
                  ></path>
                </svg>
              ) : search.value === 'baidu' ? (
                <svg
                  class="icon"
                  viewBox="0 0 1024 1024"
                  version="1.1"
                  xmlns="http://www.w3.org/2000/svg"
                  p-id="4954"
                  width="200"
                  height="200"
                >
                  <path
                    d="M184.682 538.759c111.177-23.874 96.03-156.737 92.702-185.776-5.445-44.768-58.102-123.02-129.606-116.831-89.98 8.074-103.126 138.052-103.126 138.052-12.17 60.08 29.132 188.452 140.03 164.555zM302.746 769.86c-3.257 9.331-10.517 33.228-4.234 54.03 12.402 46.677 52.912 48.77 52.912 48.77h58.218v-142.31h-62.336c-28.016 8.354-41.535 30.157-44.56 39.51z m88.281-453.898c61.406 0 111.037-70.667 111.037-158.04C502.064 70.643 452.433 0 391.027 0c-61.312 0-111.06 70.643-111.06 157.923 0 87.373 49.77 158.04 111.06 158.04z m264.47 10.447c82.068 10.657 134.84-76.925 145.335-143.31 10.703-66.292-42.256-143.288-100.357-156.527-58.218-13.356-130.909 79.904-137.54 140.704-7.912 74.32 10.633 148.593 92.562 159.133z m201.086 390.213s-126.976-98.24-201.11-204.414C555 355.66 412.272 419.37 364.525 498.993 316.987 578.594 242.9 628.947 232.382 642.28c-10.68 13.124-153.385 90.166-121.694 230.87 31.669 140.612 142.939 137.936 142.939 137.936s81.998 8.074 177.12-13.217c95.168-21.104 177.096 5.26 177.096 5.26s222.284 74.435 283.108-68.852c60.754-143.334-34.368-217.654-34.368-217.654zM476.26 929.88H331.739c-62.406-12.449-87.257-55.03-90.398-62.29-3.072-7.376-20.802-41.604-11.425-99.845 26.968-87.257 103.87-93.516 103.87-93.516h76.926v-94.563l65.524 1V929.88z m269.146-1h-166.3c-64.453-16.614-67.455-62.407-67.455-62.407v-183.89l67.455-1.094v165.276c4.119 17.637 26.015 20.825 26.015 20.825h68.525V682.581h71.76v246.297z m235.408-490.99c0-31.76-26.387-127.394-124.23-127.394-98.008 0-111.108 90.258-111.108 154.06 0 60.894 5.142 145.894 126.883 143.195 121.788-2.7 108.455-137.936 108.455-169.86z m0 0"
                    fill="#3245DF"
                    p-id="4955"
                  ></path>
                </svg>
              ) : (
                ''
              )}
            </Icon>
          </NPopselect>

          <input
            type="text"
            id={'myInput'}
            v-model={inputValue.value}
            onBlur={() =>
              setTimeout(() => {
                tipsShow.value = false
                emit('isFocus', false)
              }, 150)
            }
            onFocus={() => {
              tipsShow.value = true

              if (firstFocus) {
                emit('isFocus', true)
              }
              firstFocus = true
            }}
            autofocus
            onInput={() => (watchStart = true)}
            placeholder={'请输入内容'}
            onKeydown={(e) => keydown(e)}
            class={
              'my-input'
            }
          />
          {inputValue.value.length > 0 ? (
            <div
              class={'z-50 flex items-center mr-1 cursor-pointer'}
              onClick={() => {
                inputValue.value = ''
                document?.getElementById('myInput')?.focus()
              }}
            >
              <Icon color={'#70757A'} size="36">
                <Close />
              </Icon>
            </div>
          ) : (
            ''
          )}

          <TipsBox
            tips={tips}
            tipsShow={tipsShow}
            onTipsData={(tips: string) => {
              inputValue.value = tips
              switchSearch()
            }}
            onSelectTips={(tips: string) => {
              watchStart = false
              inputValue.value = tips
            }}
            onIsFocus={() => emit('isFocus', false)}
          />
        </div>
      </>
    )
  },
})
